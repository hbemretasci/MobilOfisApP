// Generated by Dagger (https://dagger.dev).
package com.codmine.mukellef.presentation.chat_screen.person;

import com.codmine.mukellef.domain.use_case.chat_screen.GetRelatedUsers;
import com.codmine.mukellef.domain.use_case.splash_screen.GetUserLoginData;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class PersonViewModel_Factory implements Factory<PersonViewModel> {
  private final Provider<GetRelatedUsers> getRelatedUsersProvider;

  private final Provider<GetUserLoginData> getUserLoginDataProvider;

  public PersonViewModel_Factory(Provider<GetRelatedUsers> getRelatedUsersProvider,
      Provider<GetUserLoginData> getUserLoginDataProvider) {
    this.getRelatedUsersProvider = getRelatedUsersProvider;
    this.getUserLoginDataProvider = getUserLoginDataProvider;
  }

  @Override
  public PersonViewModel get() {
    return newInstance(getRelatedUsersProvider.get(), getUserLoginDataProvider.get());
  }

  public static PersonViewModel_Factory create(Provider<GetRelatedUsers> getRelatedUsersProvider,
      Provider<GetUserLoginData> getUserLoginDataProvider) {
    return new PersonViewModel_Factory(getRelatedUsersProvider, getUserLoginDataProvider);
  }

  public static PersonViewModel newInstance(GetRelatedUsers getRelatedUsers,
      GetUserLoginData getUserLoginData) {
    return new PersonViewModel(getRelatedUsers, getUserLoginData);
  }
}
