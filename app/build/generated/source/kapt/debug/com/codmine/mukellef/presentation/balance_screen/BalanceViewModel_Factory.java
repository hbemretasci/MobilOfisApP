// Generated by Dagger (https://dagger.dev).
package com.codmine.mukellef.presentation.balance_screen;

import com.codmine.mukellef.domain.use_case.balance_screen.GetTransactions;
import com.codmine.mukellef.domain.use_case.splash_screen.GetUserLoginData;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class BalanceViewModel_Factory implements Factory<BalanceViewModel> {
  private final Provider<GetTransactions> getTransactionsProvider;

  private final Provider<GetUserLoginData> getUserLoginDataProvider;

  public BalanceViewModel_Factory(Provider<GetTransactions> getTransactionsProvider,
      Provider<GetUserLoginData> getUserLoginDataProvider) {
    this.getTransactionsProvider = getTransactionsProvider;
    this.getUserLoginDataProvider = getUserLoginDataProvider;
  }

  @Override
  public BalanceViewModel get() {
    return newInstance(getTransactionsProvider.get(), getUserLoginDataProvider.get());
  }

  public static BalanceViewModel_Factory create(Provider<GetTransactions> getTransactionsProvider,
      Provider<GetUserLoginData> getUserLoginDataProvider) {
    return new BalanceViewModel_Factory(getTransactionsProvider, getUserLoginDataProvider);
  }

  public static BalanceViewModel newInstance(GetTransactions getTransactions,
      GetUserLoginData getUserLoginData) {
    return new BalanceViewModel(getTransactions, getUserLoginData);
  }
}
