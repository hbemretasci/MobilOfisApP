// Generated by Dagger (https://dagger.dev).
package com.codmine.mukellef.presentation.notification_screen;

import com.codmine.mukellef.domain.use_case.files.ShowDocument;
import com.codmine.mukellef.domain.use_case.notification_screen.GetNotifications;
import com.codmine.mukellef.domain.use_case.notification_screen.PostNotificationReadingInfo;
import com.codmine.mukellef.domain.use_case.splash_screen.GetUserLoginData;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NotificationViewModel_Factory implements Factory<NotificationViewModel> {
  private final Provider<GetNotifications> getNotificationsProvider;

  private final Provider<PostNotificationReadingInfo> postNotificationReadingInfoProvider;

  private final Provider<GetUserLoginData> getUserLoginDataProvider;

  private final Provider<ShowDocument> showDocumentProvider;

  public NotificationViewModel_Factory(Provider<GetNotifications> getNotificationsProvider,
      Provider<PostNotificationReadingInfo> postNotificationReadingInfoProvider,
      Provider<GetUserLoginData> getUserLoginDataProvider,
      Provider<ShowDocument> showDocumentProvider) {
    this.getNotificationsProvider = getNotificationsProvider;
    this.postNotificationReadingInfoProvider = postNotificationReadingInfoProvider;
    this.getUserLoginDataProvider = getUserLoginDataProvider;
    this.showDocumentProvider = showDocumentProvider;
  }

  @Override
  public NotificationViewModel get() {
    return newInstance(getNotificationsProvider.get(), postNotificationReadingInfoProvider.get(), getUserLoginDataProvider.get(), showDocumentProvider.get());
  }

  public static NotificationViewModel_Factory create(
      Provider<GetNotifications> getNotificationsProvider,
      Provider<PostNotificationReadingInfo> postNotificationReadingInfoProvider,
      Provider<GetUserLoginData> getUserLoginDataProvider,
      Provider<ShowDocument> showDocumentProvider) {
    return new NotificationViewModel_Factory(getNotificationsProvider, postNotificationReadingInfoProvider, getUserLoginDataProvider, showDocumentProvider);
  }

  public static NotificationViewModel newInstance(GetNotifications getNotifications,
      PostNotificationReadingInfo postNotificationReadingInfo, GetUserLoginData getUserLoginData,
      ShowDocument showDocument) {
    return new NotificationViewModel(getNotifications, postNotificationReadingInfo, getUserLoginData, showDocument);
  }
}
