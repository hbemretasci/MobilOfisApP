// Generated by Dagger (https://dagger.dev).
package com.codmine.mukellef.di;

import android.app.Application;
import androidx.datastore.core.DataStore;
import androidx.datastore.preferences.core.Preferences;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvideDatastorePreferencesFactory implements Factory<DataStore<Preferences>> {
  private final Provider<Application> appProvider;

  public AppModule_ProvideDatastorePreferencesFactory(Provider<Application> appProvider) {
    this.appProvider = appProvider;
  }

  @Override
  public DataStore<Preferences> get() {
    return provideDatastorePreferences(appProvider.get());
  }

  public static AppModule_ProvideDatastorePreferencesFactory create(
      Provider<Application> appProvider) {
    return new AppModule_ProvideDatastorePreferencesFactory(appProvider);
  }

  public static DataStore<Preferences> provideDatastorePreferences(Application app) {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.provideDatastorePreferences(app));
  }
}
